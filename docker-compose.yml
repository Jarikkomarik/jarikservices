services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: jarikkomarik
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - spring
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - spring
  customer:
    image: jarikkomarik/customer:latest
    container_name: customer
    ports:
      - "8080:8080"
    environment:
          - SPRING_PROFILES_ACTIVE=docker
          - spring.kafka.bootstrap-servers=kafka:29092
    depends_on:
      - zipkin
      - postgres
      - kafka
    networks:
      - spring
      - postgres
  fraud:
    image: jarikkomarik/fraud:latest
    container_name: fraud
    ports:
      - "8081:8081"
    environment:
          - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - postgres
    networks:
      - spring
      - postgres
  notification:
    image: jarikkomarik/notification:latest
    container_name: notification
    ports:
      - "8082:8082"
    environment:
          - SPRING_PROFILES_ACTIVE=docker
          - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - zipkin
      - postgres
      - kafka
    networks:
      - spring
      - postgres
networks:
  postgres:
    driver: bridge
  spring:

volumes:
  postgres: